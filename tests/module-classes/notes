Warlock

does not support building classes from definitions

does support specifying parent class
does support attribute level validation
does not support circular references

python json schema objects

does support building classes from definitions
does not support specifying a class to extend

need to adjust module schemas

- casing problems for oneOf/additionalProperties
- in elemental constraints, the required_elements field is nested with 1 too
  many arrays
- there are a few `value` keys that point to empty objects ( {} ) that are not valid json schema
- change all "title" fields to be pascal case (appropriate for class names)

- add endpoint for bits classes (objectives, dimensions, descriptors, etc)
- normalize references
- remove constraint schema from top level module schemas
- make sure additional_properties is a boolean everywhere


- the "title" json schema field determines class names - EVERYTHING NEEDS A TITLE
- this is confusing because "title" is different than the key for the same entity
    in the definitions block
- We should align the value of "Title" with the name in the Definitions Block

There are two classes of informatics building blocks:

- top level modules
    - These can be saved as module entities
    - require metadata (schema_id, tags, etc) in their
      serialization.
- informatics legos
    - These are used by eachother and by modules
        - descriptors
        - objectives
        - constraints
        - dimensions
    - These can NOT be saved as module entities
    - Are serialized as they are, according to the JSON schema
      that defined them

Because of these two distinct categories, we need to differentiate between
these. Potentially two endpoints: `/module-schemas` and `/informatics-schemas`

TODO:

clean up module schemas listing endpoint a lot
get module schemas from the internet.